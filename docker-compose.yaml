version: "3"

services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=gateway
    volumes:
      - .:/app
    environment:
      - SERVICE_NAME=gateway
    depends_on:
      - auth-service
      - profile-service
      - rabbitmq
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=auth-service
    volumes:
      - .:/app
    environment:
      - SERVICE_NAME=auth-service
    env_file:
      - .env
    depends_on:
      - db-auth
      - rabbitmq
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}

  profile-service:
    build:
      context: ./profile-service
      dockerfile: Dockerfile
      args:
        - SERVICE_NAME=profile-service
    volumes:
      - .:/app
    environment:
      - SERVICE_NAME=profile-service
    env_file:
      - .env
    depends_on:
      - db-profile
      - rabbitmq
    ports:
      - ${PROFILE_PORT}:${PROFILE_PORT}

  db-auth:
    image: postgres
    environment:
      - POSTGRES_DB=${AUTH_POSTGRES_DB}
      - POSTGRES_USER=${AUTH_POSTGRES_USER}
      - POSTGRES_PASSWORD=${AUTH_POSTGRES_PASSWORD}
      - POSTGRES_HOST=${AUTH_POSTGRES_HOST}
      - POSTGRES_PORT=${AUTH_POSTGRES_PORT}
    env_file:
      - .env
    volumes:
      - auth-db:/var/lib/postgresql/data

  db-profile:
    image: postgres
    environment:
      - POSTGRES_DB=${PROFILE_POSTGRES_DB}
      - POSTGRES_USER=${PROFILE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${PROFILE_POSTGRES_PASSWORD}
      - POSTGRES_HOST=${PROFILE_POSTGRES_HOST}
      - POSTGRES_PORT=${PROFILE_POSTGRES_PORT}
    env_file:
      - .env
    volumes:
      - profile-db:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management-alpine
    env_file:
      - .env
    ports:
      - ${RABBITMQ_MANAGEMENT_UI_PORT}:${RABBITMQ_MANAGEMENT_UI_PORT}
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}

volumes:
  auth-db:
  profile-db:
